#include <iostream>
#include <vector>
using namespace std;

int T, K, N;
int dp[101][101][2];
vector<pair<int,int>> v;

int main() {
	cin >> T;

	dp[1][0][0] = 1; dp[1][0][1] = 1;

	for (int i = 0; i < T; i++) {
		cin >> N >> K;
		v.push_back(make_pair(N, K));
	}
	for (int n = 2; n < 101; n++) {
		for (int k = 0; k < 100; k++) {
			if (k != 0) {
				dp[n][k][0] = dp[n - 1][k][1] + dp[n - 1][k][0];
				dp[n][k][1] = dp[n - 1][k][0] + dp[n - 1][k - 1][1];
			}
			else {
				dp[n][k][0] = dp[n - 1][k][1] + dp[n - 1][k][0];
				dp[n][k][1] = dp[n - 1][k][0];
			}
		}
	}
	for (int i = 0; i < T; i++) {
		cout << dp[v[i].first][v[i].second][0] + dp[v[i].first][v[i].second][1]<<'\n';
	}
	
	return 0;
}