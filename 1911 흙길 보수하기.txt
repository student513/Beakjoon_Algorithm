#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
int N, L;
int old_end, cnt;
int brg;
vector<pair<int, int>> vec;
int main() {
	cin >> N >> L;
	for (int i = 0; i < N; i++) {
		int temp1, temp2;
		cin >> temp1 >> temp2;
		vec.push_back({ temp1,temp2 });
	}
	sort(vec.begin(), vec.end());
	for (int i = 0; i < vec.size(); i++) {
		int end = vec[i].second-1; int start = vec[i].first;
		
		if (old_end >= start) {
			start = old_end + 1;
		}
		
		int len = end - start+1;
		brg = len % L;
		if (brg > 0) cnt += len / L + 1;
		else cnt += len / L;
		
		if (brg > 0) {
			old_end = end + L-brg;
		}
	}
	cout << cnt;
	return 0;
}