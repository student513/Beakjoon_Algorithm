#include <iostream>
#include <vector>
#include <string>
#include <cstring>
#include <algorithm>
#include <cstdio>
using namespace std;


bool chk_num(string temp) {
	switch (temp[0]) {
	case '0':case '1':case '2':case '3':case '4':case '5':case '6':case '7':case '8':case '9':
		return true;
	}
	return false;
}

typedef struct pkm {
	string name;
	int num;
}pkm;
pkm pkm_arr[100001];

bool compare(pkm a, pkm b) {
	return a.name < b.name;
}

string str_tmp[100001];
int N, M;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);

	cin >> N >> M;
	for (int i = 1; i <= N; i++) {
		cin >> str_tmp[i];
		pkm_arr[i].name = str_tmp[i];
		pkm_arr[i].num = i;
	}
	sort(pkm_arr + 1, pkm_arr + N + 1, compare);

	//cout << "\n";for (int i = 1; i <= N; i++) {cout << pkm_arr[i].name << '\n';}

	while (M--) {
		string temp;
		cin >> temp;
		if (chk_num(temp)) {//temp가 숫자
			int num = stoi(temp);
			cout << str_tmp[num]<<'\n';
		}
		else {//temp가 문자열
			int start = 1, end = N, mid = (start + end) / 2;
			while (true) {
				if (temp < pkm_arr[mid].name) {
					end = mid-1;
				}
				else if (temp > pkm_arr[mid].name) {
					start = mid+1;
				}
				else {
					cout<<pkm_arr[mid].num<<'\n';
					break;
				}
				mid = (start + end) / 2;
			}
		}
	}
	return 0;
}