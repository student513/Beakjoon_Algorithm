#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
using namespace std;

int N, M;
vector<int> arr;
//int val[9][2];
//bool visited[9];
vector<pair<int, bool>> val;
set<vector<int>> s;

void func(int cnt) {
	if (cnt == M) {
		s.insert(arr);
		/*
		for (int i = 0; i < M; i++) {
			cout << arr[i] << " ";
		}
		cout << '\n';
		*/
		
		return;
	}
	for (int i = 0; i < N; i++) {
		if (!val[i].second){ //&& arr[cnt] != val[i].first) {
			arr.push_back(val[i].first);
			val[i].second = true;
			func(cnt + 1);
			arr.pop_back();
			val[i].second = false;
		}

	}
}

int main() {
	int temp;
	cin >> N >> M;
	for (int i = 0; i < N; i++) {
		cin >> temp;
		val.push_back(pair<int, bool>(temp, false));
	}
	sort(val.begin(), val.end());

	func(0);

	set<vector<int>>::iterator iter;
	for (iter = s.begin(); iter != s.end();iter++) {
		const vector<int>&i = (*iter);
		for (int j = 0; j < i.size(); j++) {
			cout << i[j] << " ";
		}
		cout<<'\n';
	}

	return 0;
}