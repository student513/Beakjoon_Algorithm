#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
int N,temp;
long long int DP[1000001][4];
vector<int> v;
int main() {
	cin >> N;
	for (int i = 1; i <= N; i++) {
		cin >> temp;
		v.push_back(temp);
	}
	int Max = *max_element(v.begin(), v.end());
	DP[1][1] = 1;
	DP[2][1] = 1; DP[2][2] = 1;
	for (int i = 3; i <= Max; i++) {
		DP[i][1] = (DP[i - 1][1] + DP[i - 1][2] + DP[i - 1][3]) % 1000000009;
		DP[i][2] = DP[i - 1][1] % 1000000009;
		DP[i][3] = DP[i - 1][2] % 1000000009;
	}
	for (int i = 0; i < N; i++) {
		cout <<( DP[v[i]][1]+ DP[v[i]][2] + DP[v[i]][3]) % 1000000009 << '\n';
	}
	return 0;
}