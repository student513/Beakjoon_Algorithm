#include <iostream>
#include <queue>
using namespace std;

queue<pair<int,int>> que;
bool visited[100001];
int N, K;
int temp,time;

int main() {
	cin >> N >> K;
	temp = N;
	que.push(make_pair(temp, 0));
	visited[temp] = true;

	while (!que.empty()) {
		int Move = que.front().first;
		int Time = que.front().second;
		que.pop();
		visited[Move] = true;
		if (Move == K) {
			cout << Time;
			break;
		}
		//+1
		if (!visited[Move + 1] && 0 <= Move + 1 && Move + 1 <100001)
			que.push(make_pair(Move + 1, Time + 1));
		//-1
		if (!visited[Move - 1] && 0 <= Move - 1 && Move - 1 < 100001)
			que.push(make_pair(Move - 1, Time + 1));
		//*2
		if (!visited[Move * 2] && 0 <= Move * 2 && Move * 2 < 100001)
			que.push(make_pair(Move * 2, Time + 1));
	}
	return 0;
}