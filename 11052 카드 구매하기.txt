#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

vector<int> P;
vector<int> Max;
int N, temp;
int DP[1001];

int main() {
	cin >> N;
	P.push_back(0);
	for (int i = 0; i < N; i++) {
		cin >> temp;
		P.push_back(temp);
	}
	
	DP[1] = P[1];
	for (int i = 2; i <= N; i++) {
		Max.clear();
		for (int j = i; j >= 0; j--) {
			for (int k = 0; k <= i; k++) {
				if (j + k == i) {
					Max.push_back(DP[j] + P[k]);
					//cout << "(" << j << "," << k << ")" << "\n";
				}
			}
		}
		DP[i] = *max_element(Max.begin(), Max.end());
	}
	cout << DP[N];
	return 0;
}