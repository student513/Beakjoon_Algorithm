#include <iostream>
#include <vector>
using namespace std;

vector<int> vec[2001];
int N, M, a, b, depth,result;
bool visited[2001];

void print() {
	for (int i = 0; i < N; i++) {
		cout << i << ":";
		for (int j = 0; j < vec[i].size(); j++) {
			cout << vec[i][j] << " ";
		}
		cout << "\n";
	}
}

void dfs(int curr, int depth) {
	visited[curr] = true;
	if (depth == 4) {
		result = 1;
		return;
	}
	for (int i = 0; i < vec[curr].size(); i++) {
		if (!visited[vec[curr][i]]) {
			dfs(vec[curr][i], depth + 1);
		}
	}
	visited[curr] = false;
}

int main() {
	cin >> N >> M;
	for (int i = 0; i < M; i++) {
		cin >> a >> b;
		vec[a].push_back(b);
		vec[b].push_back(a);
	}
	//print();
	for (int i = 0; i < N; i++) {
		depth = 0;
		if (!visited[i])
			dfs(i,0);
	}

	cout << result;
	return 0;
}