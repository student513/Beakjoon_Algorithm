#include <stdio.h>
#define min(a,b) (((a)<(b))?(a):(b))

int init(int **DP, int num);

/*
반례
4
3 3 3
3 3 3
1 3 3
3 3 3
ans:9

3
1   2   100
1   100 100
100 1   100
ans:201

앞을 기준으로 하지말고 뒤를 기준으로?
세 값이 모두 같을 때 어떻게 처리할 것인가?
내 코드는 greedy
*/

int main() {
	int num;
	int i, j;

	scanf("%d", &num);
	int **arr = (int**)malloc(sizeof(int*)*(num+1));
	for (i = 0; i < num; i++) {
		arr[i] = (int*)malloc(sizeof(int) * 3);
	}

	int **DP = (int**)calloc(sizeof(int*),num+1);
	for (i = 0; i < num; i++) {
		DP[i] = (int*)calloc(sizeof(int), 3);
	}

	for (i = 0; i < num; i++) {
		for (j = 0; j < 3; j++) {
			scanf("%d", &arr[i][j]);
		}
	}

	if (num >= 2) {
		DP[1][0] = min(arr[0][1], arr[0][2]) + arr[1][0];
		DP[1][1] = min(arr[0][0], arr[0][2]) + arr[1][1];
		DP[1][2] = min(arr[0][0], arr[0][1]) + arr[1][2];
		for (i = 1; i < num - 1; i++) {
			for (j = 0; j < 3; j++) {
				DP[i + 1][0] = min(DP[i][1], DP[i][2]) + arr[i + 1][0];
				DP[i + 1][1] = min(DP[i][0], DP[i][2]) + arr[i + 1][1];
				DP[i + 1][2] = min(DP[i][0], DP[i][1]) + arr[i + 1][2];
			}
		}

		printf("%d", init(DP, num));
	}
	else {
		printf("%d", init(arr, num));
	}
	return 0;
}

int init(int **DP, int num) {
	for (int i = 0; i < 3; i++) {
		for (int j = 1; j < 3 - i; j++) {
			if (DP[num - 1][i] > DP[num - 1][j]) {
				int temp = DP[num - 1][i];
				DP[num - 1][i] = DP[num - 1][j];
				DP[num - 1][j] = temp;
			}
		}
	}

	return DP[num-1][0];
}