#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
vector<long long> vec, temp;
int N;

long long gcd(long long a, long long b) {
	while (b != 0) {
		long long r = a % b;
		a = b;
		b = r;
	}
	return a;
}

int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);

	cin >> N;
	for (int i = 0; i < N; i++) {
		long long temp;
		cin >> temp;
		vec.push_back(temp);
	}
	sort(vec.begin(), vec.end());
	//for (int i = 0; i < vec.size(); i++)cout << vec[i];
	//long long num = *min_element(vec.begin(), vec.end());
	
	int num = vec[1] - vec[0];
	for (int i = 2; i < vec.size(); i++) {
		num = gcd(num, vec[i] - vec[i - 1]);
	}

	for (int i = 2; i*i <= num; i++) {
		if (num%i == 0) {
			temp.push_back(i);
			temp.push_back(num / i);
		}
	}
	temp.push_back(num);
	sort(temp.begin(), temp.end());
	temp.erase(unique(temp.begin(), temp.end()), temp.end());
	for (int i = 0; i < temp.size(); i++)cout << temp[i] << " ";

	return 0;
}