#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
vector<int> vec;
bool visited[14];
int buf[6],k;
bool chk() {
	for (int i = 0; i < 5; i++) {
		if (buf[i] > buf[i + 1])return false;
	}
	return true;
}
void print() {
	for (int i = 0; i < 6; i++)cout << buf[i] << " ";
	cout << '\n';
}
void dfs(int idx) {
	if (idx == 6) {
		if(chk())print();
		return;
	}
	for (int i = 0; i < k; i++) {
		if (!visited[i]) {
			visited[i] = true;
			buf[idx] = vec[i];
			dfs(idx + 1);
			visited[i] = false;
		}
	}
}

int main() {
	while (true) {
		cin >> k;
		if (k == 0)break;

		for (int i = 0; i < 14; i++)visited[i] = false;
		vec.clear();
		for (int i = 0; i < 6; i++)buf[i] = 0;

		for (int i = 0; i < k; i++) {
			int temp;
			cin >> temp;
			vec.push_back(temp);
			
		}
		sort(vec.begin(), vec.end());
		dfs(0);
		cout << '\n';
	}
	
	return 0;
}