#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int N;
int arr[9], bfc[9];
bool visited[9];
vector<int> v;

void print() {
	cout << '\n';
	for (int i = 0; i < N; i++)
		cout << bfc[i] << " ";
	cout << '\n';
}

void abs_sum() {
	int result = 0;
	for (int i = 0; i < N-1; i++) {
		result += abs(bfc[i] - bfc[i + 1]);
	}
	v.push_back(result);
	//cout << result;
}

void func(int index) {
	if (index == N) {
		abs_sum();
		//print();
		return;
	}
	for (int i = 0; i < N; i++) {
		if (!visited[i]) {
			visited[i] = true;
			bfc[index] = arr[i];
			func(index + 1);
			visited[i] = false;
		}
	}
}

int main() {
	cin >> N;
	for (int i = 0; i < N; i++)
		cin >> arr[i];
	func(0);
	int max = *max_element(v.begin(), v.end());
	cout << max;
	return 0;
}