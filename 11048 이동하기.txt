#include <stdio.h>
#define max(a,b) (((a)>(b))? (a):(b))

int main() {
	int N, M;
	int i, j;

	scanf("%d %d", &N, &M);
	
	int **arr = (int**)malloc(sizeof(int*)*N);
	for (i = 0; i < N; i++)
		arr[i] = (int*)malloc(sizeof(int)*M);

	int **DP = (int**)calloc(sizeof(int*),N);
	for (i = 0; i < N; i++)
		DP[i] = (int*)calloc(sizeof(int),M);
	

	for (i = 0; i < N; i++) {
		for (j = 0; j < M; j++) {
			scanf("%d", &arr[i][j]);
		}
	}

	DP[0][0] = arr[0][0];
	for (i = 0; i < M-1; i++) {
		DP[0][i + 1] = DP[0][i] + arr[0][i + 1];
	}
	for (i = 0; i < N-1; i++) {
		DP[i + 1][0] = DP[i][0] + arr[i + 1][0];
	}
	for (i = 0; i < N - 1; i++) {
		for (j = 0; j < M - 1; j++) {
			if (DP[i + 1][j] == 0)
				DP[i + 1][j] = arr[i + 1][j] + DP[i][j];
			if (DP[i][j + 1] == 0)
				DP[i][j + 1] = arr[i][j + 1] + DP[i][j];
			if (DP[i + 1][j + 1] == 0)
				DP[i + 1][j + 1] = max(DP[i + 1][j], DP[i][j + 1]) + arr[i + 1][j + 1];
		}
	}

	/*
	DP[0][0] = arr[0][0];
	for (i = 0; i < N-1; i++) {
		for (j = 0; j < M-1; j++) {
			if ((i == 0) && (j == 0)) {
				DP[i + 1][j] = arr[i + 1][j] + arr[i][j];
				DP[i][j + 1] = arr[i][j + 1] + arr[i][j];
				DP[i + 1][j + 1] = max(DP[i + 1][j], DP[i][j + 1]) + arr[i + 1][j + 1];
			}
			else {
				if (DP[i + 1][j] == 0)
					DP[i + 1][j] = arr[i + 1][j] + DP[i][j];
				if (DP[i][j + 1] == 0)
					DP[i][j + 1] = arr[i][j + 1] + DP[i][j];
				if (DP[i + 1][j + 1] == 0)
					DP[i + 1][j + 1] = max(DP[i + 1][j], DP[i][j + 1]) + arr[i + 1][j + 1];
			}
		}
	}
	*/

	printf("%d", DP[N - 1][M - 1]);

	return 0;
}